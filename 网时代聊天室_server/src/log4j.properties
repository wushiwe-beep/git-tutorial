#控制logj的输出目的地
#【语法】
# 级别,目的地1,目的地2,目的地3,目的地4...
log4j.rootLogger = debug,stdout


########
# org.apache.log4j.ConsoleAppender					输出到控制台
# org.apache.log4j.FileAppender						输出到文件
# org.apache.log4j.DailyRollingFileAppender			输出到文件	（每日滚动型）		
########
### 配置目的地输出源1：  stdout	输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
# %p 	级别
# %d	时间
# %l	所在行
# %m	日志内容
# %n	换行
log4j.appender.stdout.layout.ConversionPattern = [%p] %d{yyyy-MM-dd HH:mm:ss,SSS} %l %n%m%n
# 独立控制当前这个目的地的输出级别
log4j.appender.stdout.Threshold = debug



### 配置目的地输出源2： wsdDebug 输出信息到文件（Logs/debug.log），只记录DEBUG级别以上的日志  ###
log4j.appender.wsdDebug = org.apache.log4j.DailyRollingFileAppender
log4j.appender.wsdDebug.layout = org.apache.log4j.PatternLayout
log4j.appender.wsdDebug.layout.ConversionPattern = [%p] %d{yyyy-MM-dd HH:mm:ss,SSS} [ %l ]  %n%m%n
log4j.appender.wsdDebug.Threshold = debug
log4j.appender.wsdDebug.File = Logs/Debug/yockDebug.log



### 配置目的地输出源3：wsdError 输出信息到文件（Logs/error.log），只记录ERROR级别以上的日志  ###
log4j.appender.wsdError = org.apache.log4j.DailyRollingFileAppender
log4j.appender.wsdError.layout = org.apache.log4j.PatternLayout
log4j.appender.wsdError.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %n%m%n
log4j.appender.wsdError.Threshold = error
log4j.appender.wsdError.File = Logs/Error/yockError.log



#属性文件的语法
#属性名=值
username=张三
password=000000
