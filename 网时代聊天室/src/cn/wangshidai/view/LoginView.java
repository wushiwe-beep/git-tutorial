/*
 * LoginView.java
 *
 * Created on __DATE__, __TIME__
 */

package cn.wangshidai.view;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.List;

import javax.swing.JOptionPane;

import cn.wangshidai.entity.UserInfo;
import cn.wangshidai.util.RefreshMessageThread;

/**
 *
 * @author  __USER__
 */
public class LoginView extends javax.swing.JFrame {

	/** Creates new form LoginView */
	public LoginView() {
		initComponents();

		//设置窗口居中
		this.setLocationRelativeTo(null);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		tf_username = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		pf_password = new javax.swing.JPasswordField();
		jButton1 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 36));
		jLabel1.setText("\u7f51\u65f6\u4ee3\u804a\u5929\u5ba4");

		jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14));
		jLabel2.setText("\u7528\u6237\u540d");

		tf_username.setToolTipText("null");

		jLabel3.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14));
		jLabel3.setText("\u5bc6\u7801");

		jButton1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18));
		jButton1.setText("\u767b\u5f55");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(63, 63,
																		63)
																.addComponent(
																		jButton1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		364,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(31, 31,
																		31))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(30, 30,
																		30)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						jLabel3)
																				.addComponent(
																						jLabel2))
																.addGap(37, 37,
																		37)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						pf_password,
																						javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						tf_username,
																						javax.swing.GroupLayout.Alignment.TRAILING,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						336,
																						javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(132,
																		132,
																		132)
																.addComponent(
																		jLabel1)))
								.addContainerGap(23, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel1)
								.addGap(48, 48, 48)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														tf_username,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														37,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel2))
								.addGap(39, 39, 39)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														pf_password,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														38,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel3))
								.addGap(34, 34, 34)
								.addComponent(jButton1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										50,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(62, Short.MAX_VALUE)));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		String username = this.tf_username.getText();
		String pwd = new String(this.pf_password.getPassword());
		
		try {
			//开始连接服务器
			Socket clientSocket = new Socket("127.0.0.1", 9999);
			
			//将UserInfo对象（里头包含了账号和密码）发送给服务端
			UserInfo userInfo = new UserInfo();
			userInfo.setUser_name(username);
			userInfo.setUser_pwd(pwd);
			ObjectOutputStream out = new ObjectOutputStream(clientSocket.getOutputStream());
			out.writeObject(userInfo);
			
			//接收来自服务端的“登录信息验证结果”消息
			ObjectInputStream input = new ObjectInputStream(clientSocket.getInputStream());
			UserInfo loginUserInfo = (UserInfo) input.readObject();
			
			if(loginUserInfo==null){//登录错误！！
				JOptionPane.showMessageDialog(null, "账号或密码错误！");
			}else{//登录成功！！
				//请求服务端
				out.writeObject("请求用户列表...");
				//获取服务端的响应
				List<UserInfo> userList  = (List<UserInfo>) input.readObject();
				
				
				//开一条子线程让他去一直刷新读取消息（后台线程/守护线程）	
				Thread thread = new Thread(RefreshMessageThread.getObject(clientSocket, loginUserInfo));
				thread.setDaemon(true);
				thread.start();
				
				//跳转到主窗口
				MainView view = new MainView(userList,loginUserInfo);
				view.setVisible(true);
				this.setVisible(false);
			}
			
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new LoginView().setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPasswordField pf_password;
	private javax.swing.JTextField tf_username;
	// End of variables declaration//GEN-END:variables

}